# Generated by Django 2.2.6 on 2019-10-31 16:04

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import re


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='TestMe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_ip', models.GenericIPAddressField(help_text='Lorem dolor')),
                ('test_url', models.URLField(help_text='Lorem dolor')),
                ('test_int', models.IntegerField(help_text='Lorem dolor')),
                ('test_img', models.ImageField(blank=True, upload_to='dummy')),
                ('test_file', models.FileField(blank=True, upload_to='dummy')),
                ('test_date', models.DateField(help_text='Lorem dolor')),
                ('test_char', models.CharField(help_text='Lorem dolor', max_length=50)),
                ('test_bool', models.BooleanField(default=False, help_text='Lorem dolor')),
                ('test_time', models.TimeField(help_text='Lorem dolor')),
                ('test_slug', models.SlugField(help_text='Lorem dolor')),
                ('test_text', models.TextField(help_text='Lorem dolor')),
                ('test_email', models.EmailField(help_text='Lorem dolor', max_length=254)),
                ('test_float', models.FloatField(help_text='Lorem dolor')),
                ('test_bigint', models.BigIntegerField(help_text='Lorem dolor')),
                ('test_positive_integer', models.PositiveIntegerField(help_text='Lorem dolor')),
                ('test_decimal', models.DecimalField(decimal_places=2, help_text='Lorem dolor', max_digits=5)),
                ('test_comma_separated_int', models.CharField(help_text='Lorem dolor', max_length=100, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:\\,\\d+)*\\Z'), code='invalid', message='Enter only digits separated by commas.')])),
                ('test_small_int', models.SmallIntegerField(help_text='Lorem dolor')),
                ('test_nullbool', models.NullBooleanField(help_text='Lorem dolor')),
                ('test_filepath', models.FilePathField(blank=True, help_text='Lorem dolor')),
                ('test_positive_small_int', models.PositiveSmallIntegerField(help_text='Lorem dolor')),
                ('test_m2m', models.ManyToManyField(blank=True, help_text='Lorem dolor', related_name='_testme_test_m2m_+', to='test_django_admin_bootstrapped.TestMe')),
            ],
            options={
                'verbose_name': 'Test me',
                'verbose_name_plural': 'Lot of Test me',
            },
        ),
        migrations.CreateModel(
            name='TestSortable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.PositiveSmallIntegerField(verbose_name='Position')),
                ('test_char', models.CharField(max_length=5)),
                ('that', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='test_django_admin_bootstrapped.TestMe')),
            ],
            options={
                'ordering': ('position',),
            },
        ),
        migrations.CreateModel(
            name='TestThat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_ip', models.GenericIPAddressField(help_text='Lorem dolor')),
                ('test_url', models.URLField(help_text='Lorem dolor')),
                ('test_int', models.IntegerField(help_text='Lorem dolor')),
                ('test_date', models.DateField(help_text='Lorem dolor')),
                ('test_bool', models.BooleanField(default=True, help_text='Lorem dolor')),
                ('test_fk', models.ForeignKey(blank=True, help_text='Lorem dolor', null=True, on_delete=django.db.models.deletion.CASCADE, to='test_django_admin_bootstrapped.TestSortable')),
                ('that', models.ForeignKey(help_text='Lorem dolor', on_delete=django.db.models.deletion.CASCADE, to='test_django_admin_bootstrapped.TestMe')),
            ],
            options={
                'verbose_name': 'Test that',
                'verbose_name_plural': 'Lot of Test that',
            },
        ),
        migrations.CreateModel(
            name='TestMeProxyForFieldsets',
            fields=[
            ],
            options={
                'verbose_name': 'Test me fieldsets',
                'verbose_name_plural': 'Lot of Test me fieldsets',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('test_django_admin_bootstrapped.testme',),
        ),
    ]
